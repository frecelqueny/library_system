/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package floatedPage;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import config.connectDB;

/**
 *
 * @author markjay
 */
public class editBorrow extends javax.swing.JPanel {
    private connectDB db;
    Connection con;
    PreparedStatement ps;
    ResultSet rs;

    /**
     * Creates new form editBorrow
     */
    public editBorrow() {
        initComponents();
        db = new connectDB();
        con = db.getConnection();
    }

    public void setData(String id, String studentId, String bookId, String borrowDate, String returnDate) {
        this.id.setText(id);
        this.studentId.setText(studentId);
        this.bookId.setText(bookId);
        this.borrowDate.setText(borrowDate);
        this.returnDate.setText(returnDate);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        studentId = new javax.swing.JTextField();
        bookId = new javax.swing.JTextField();
        borrowDate = new javax.swing.JTextField();
        returnDate = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(204, 102, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Update Borrow Record");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 6, 310, 80));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Borrow ID");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 106, 127, 19));

        jLabel3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Student ID");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 106, 127, 19));

        jLabel4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Book ID");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 127, 19));

        jLabel5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Borrow Date");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(167, 180, 127, 19));

        jLabel6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Return Date");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, 127, 19));

        id.setEditable(false);
        jPanel1.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 131, 130, 31));

        studentId.setEditable(false);
        jPanel1.add(studentId, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 131, 130, 31));

        bookId.setEditable(false);
        jPanel1.add(bookId, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 203, 130, 31));

        borrowDate.setEditable(false);
        jPanel1.add(borrowDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(164, 203, 130, 31));
        jPanel1.add(returnDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 270, 130, 31));

        saveButton.setText("Save");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });
        jPanel1.add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 70, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {
        try {
            String borrowId = this.id.getText();
            String studentId = this.studentId.getText();
            String bookId = this.bookId.getText();
            String borrowDate = this.borrowDate.getText();
            String returnDate = this.returnDate.getText();

            if (studentId.isEmpty() || bookId.isEmpty() || borrowDate.isEmpty() || returnDate.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please fill all fields");
                return;
            }

            // Check if student exists
            String studentQuery = "SELECT * FROM student WHERE ID = '" + studentId + "'";
            ResultSet studentRs = db.getData(studentQuery);
            if (!studentRs.next()) {
                JOptionPane.showMessageDialog(this, "Student not found");
                return;
            }

            // Check if book exists
            String bookQuery = "SELECT * FROM book WHERE ID = '" + bookId + "'";
            ResultSet bookRs = db.getData(bookQuery);
            if (!bookRs.next()) {
                JOptionPane.showMessageDialog(this, "Book not found");
                return;
            }

            // Get old book ID to update status
            String oldBookQuery = "SELECT book_id FROM borrow WHERE id = '" + borrowId + "'";
            ResultSet oldBookRs = db.getData(oldBookQuery);
            if (oldBookRs.next()) {
                String oldBookId = oldBookRs.getString("book_id");
                
                // Update old book status (return book)
                if (!oldBookId.equals(bookId)) {
                    String updateOldBookQuery = "UPDATE book SET Status = 'Available' WHERE ID = '" + oldBookId + "'";
                    db.UpdateData(updateOldBookQuery);

                    // Update new book status (borrow book)
                    String updateNewBookQuery = "UPDATE book SET Status = 'Borrowed' WHERE ID = '" + bookId + "'";
                    db.UpdateData(updateNewBookQuery);
                }
            }

            // Update borrow record
            String updateBorrowQuery = "UPDATE borrow SET student_id = '" + studentId + 
                                     "', book_id = '" + bookId + 
                                     "', borrow_date = '" + borrowDate + 
                                     "', return_date = '" + returnDate + 
                                     "' WHERE id = '" + borrowId + "'";
            
            int result = db.UpdateData(updateBorrowQuery);
            if (result > 0) {
                JOptionPane.showMessageDialog(this, "Borrow record updated successfully");
            } else {
                JOptionPane.showMessageDialog(this, "Error updating borrow record");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField bookId;
    public javax.swing.JTextField borrowDate;
    public javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JTextField returnDate;
    private javax.swing.JButton saveButton;
    public javax.swing.JTextField studentId;
    // End of variables declaration//GEN-END:variables
}
